# Coolify-optimized Dockerfile for StrataTracker (ClamAV disabled)
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tsconfig.server.json ./

# Copy source code
COPY server ./server
COPY shared ./shared
COPY client ./client

# Install dependencies
RUN npm install

# Declare build arguments for Vite environment variables
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_ANON_KEY

# Set environment variables from build arguments for Vite build process
ENV VITE_SUPABASE_URL=${VITE_SUPABASE_URL}
ENV VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY}

# Debug: Show what environment variables are set (non-blocking)
RUN echo "Build environment check:" || true && \
    echo "VITE_SUPABASE_URL is set: $([ -n "$VITE_SUPABASE_URL" ] && echo 'YES' || echo 'NO')" || true && \
    echo "VITE_SUPABASE_ANON_KEY is set: $([ -n "$VITE_SUPABASE_ANON_KEY" ] && echo 'YES' || echo 'NO')" || true

# Build the application
RUN npm run build

# Production stage (simplified without ClamAV)
FROM node:18-alpine AS production

WORKDIR /app

# Install minimal required dependencies
RUN apk update && apk add --no-cache \
    curl \
    netcat-openbsd \
    && rm -rf /var/cache/apk/*

# Copy built application
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/dist ./dist/
COPY --from=builder /app/shared ./shared/
COPY --from=builder /app/node_modules ./node_modules/

# Create necessary directories
RUN mkdir -p /app/uploads /app/logs

# Set environment
ENV NODE_ENV=production
ENV PORT=3001
ENV VIRUS_SCANNING_ENABLED=false

# Expose port
EXPOSE 3001

# Simple health check for Node.js app only
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/api/health || exit 1

# Run Node.js directly without supervisor
CMD ["node", "dist/server/index.js"] 