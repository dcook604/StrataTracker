# Coolify-optimized Dockerfile for StrataTracker
FROM node:18-alpine as builder

# Install build dependencies
RUN apk add --no-cache python3 make g++

WORKDIR /app

# Copy package files and config
COPY package*.json ./
COPY tsconfig.json ./
COPY tsconfig.server.json ./
COPY vite.config.ts ./

# Install all dependencies (including dev dependencies needed for build)
RUN npm ci --ignore-scripts

# Copy source code
COPY . .

# Build arguments for Vite environment variables (passed from docker-compose.coolify.yml)
ARG VITE_SUPABASE_URL
ARG VITE_SUPABASE_ANON_KEY

# Set environment variables for build process
ENV VITE_SUPABASE_URL=$VITE_SUPABASE_URL
ENV VITE_SUPABASE_ANON_KEY=$VITE_SUPABASE_ANON_KEY
ENV NODE_ENV=production

# Log build-time environment for debugging
RUN echo "Build-time Supabase URL: $VITE_SUPABASE_URL" && \
    echo "Build-time Supabase Key: ${VITE_SUPABASE_ANON_KEY:0:20}..." && \
    echo "Node environment: $NODE_ENV"

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine

# Install runtime dependencies
RUN apk add --no-cache curl

WORKDIR /app

# Copy package files for production dependencies
COPY package*.json ./
RUN npm ci --only=production --ignore-scripts

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server
COPY --from=builder /app/shared ./shared
COPY --from=builder /app/migrations ./migrations

# Create necessary directories
RUN mkdir -p /app/uploads /app/logs && \
    chown -R node:node /app

# Switch to non-root user
USER node

# Health check for Coolify
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || exit 1

# Expose port
EXPOSE 3001

# Start the application
CMD ["npm", "start"] 