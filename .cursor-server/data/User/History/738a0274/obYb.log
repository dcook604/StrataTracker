db uses an image, skipping
Building backend
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 909B done
#1 DONE 0.0s

#2 [internal] load metadata for docker.io/library/node:18-alpine
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context: 138B done
#3 DONE 0.0s

#4 [builder  1/11] FROM docker.io/library/node:18-alpine
#4 DONE 0.0s

#5 [builder  2/11] WORKDIR /app
#5 CACHED

#6 [internal] load build context
#6 transferring context: 6.69kB 0.3s done
#6 DONE 0.4s

#7 [builder  3/11] COPY package*.json ./
#7 ...

#8 [stage-1 3/8] RUN mkdir -p ./dist/public
#8 DONE 0.5s

#7 [builder  3/11] COPY package*.json ./
#7 DONE 0.2s

#9 [builder  4/11] COPY tsconfig.json ./
#9 DONE 0.1s

#10 [stage-1 4/8] RUN mkdir -p ./node_modules
#10 ...

#11 [builder  5/11] COPY vite.config.ts ./
#11 DONE 0.1s

#12 [builder  6/11] COPY server ./server
#12 DONE 0.1s

#13 [builder  7/11] COPY shared ./shared
#13 DONE 0.1s

#10 [stage-1 4/8] RUN mkdir -p ./node_modules
#10 DONE 0.4s

#14 [builder  8/11] COPY client ./client
#14 DONE 0.1s

#15 [builder  9/11] RUN npm install
#15 9.401 npm warn deprecated @esbuild-kit/esm-loader@2.6.5: Merged into tsx: https://tsx.is
#15 9.432 npm warn deprecated @esbuild-kit/core-utils@3.3.2: Merged into tsx: https://tsx.is
#15 21.07 
#15 21.07 added 534 packages, and audited 535 packages in 21s
#15 21.07 
#15 21.07 69 packages are looking for funding
#15 21.07   run `npm fund` for details
#15 21.15 
#15 21.15 7 moderate severity vulnerabilities
#15 21.15 
#15 21.15 To address issues that do not require attention, run:
#15 21.15   npm audit fix
#15 21.15 
#15 21.15 To address all issues (including breaking changes), run:
#15 21.15   npm audit fix --force
#15 21.15 
#15 21.15 Run `npm audit` for details.
#15 21.15 npm notice
#15 21.15 npm notice New major version of npm available! 10.8.2 -> 11.4.1
#15 21.15 npm notice Changelog: https://github.com/npm/cli/releases/tag/v11.4.1
#15 21.15 npm notice To update run: npm install -g npm@11.4.1
#15 21.15 npm notice
#15 DONE 23.9s

#16 [builder 10/11] RUN ls -la client # Debug: List files in /app/client to verify index.html presence
#16 0.309 total 24
#16 0.310 drwxr-xr-x    4 root     root          4096 May 25 20:33 .
#16 0.310 drwxr-xr-x    1 root     root          4096 May 25 21:57 ..
#16 0.310 -rw-rw-r--    1 root     root          1783 May 25 20:33 index.html
#16 0.310 drwxrwxr-x    2 root     root          4096 May 25 20:33 public
#16 0.310 drwxrwxr-x    6 root     root          4096 May 25 20:33 src
#16 DONE 0.3s

#17 [builder 11/11] RUN npm run build
#17 0.595 
#17 0.595 > rest-express@1.0.0 build
#17 0.595 > npm run check-conflicts && vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
#17 0.595 
#17 0.915 
#17 0.915 > rest-express@1.0.0 check-conflicts
#17 0.915 > find . -type f \( -name '*.tsx' -o -name '*.ts' -o -name '*.jsx' -o -name '*.js' \) -exec grep -H '<<<<<<< HEAD' {} + || true
#17 0.915 
#17 6.897 vite v5.4.14 building for production...
#17 7.019 transforming...
#17 23.32 ✓ 2892 modules transformed.
#17 24.76 rendering chunks...
#17 24.80 computing gzip size...
#17 25.02 ../dist/public/index.html                     1.88 kB │ gzip:   0.81 kB
#17 25.02 ../dist/public/assets/index-B2MAaKPm.css      1.30 kB │ gzip:   0.45 kB
#17 25.02 ../dist/public/assets/index-3-HCJIwz.js   2,002.88 kB │ gzip: 723.81 kB
#17 25.02 
#17 25.02 (!) Some chunks are larger than 500 kB after minification. Consider:
#17 25.02 - Using dynamic import() to code-split the application
#17 25.02 - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
#17 25.02 - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
#17 25.02 ✓ built in 18.07s
#17 25.15 
#17 25.15   dist/index.js  150.6kb
#17 25.15 
#17 25.15 ⚡ Done in 36ms
#17 DONE 25.3s

#18 [stage-1 5/8] COPY --from=builder /app/package*.json ./
#18 DONE 0.5s

#19 [stage-1 6/8] COPY --from=builder /app/dist ./dist/
#19 DONE 0.1s

#20 [stage-1 7/8] COPY --from=builder /app/dist/public ./dist/public/
#20 DONE 0.1s

#21 [stage-1 8/8] COPY --from=builder /app/node_modules ./node_modules/
#21 DONE 6.6s

#22 exporting to image
#22 exporting layers
#22 exporting layers 9.3s done
#22 writing image sha256:70cb7d7913d0c806a5df79e0f1f16bc576c2b769a5c4e5c05ae72e87ea362579 done
#22 naming to docker.io/library/violation_backend 0.0s done
#22 DONE 9.3s
The Docker Engine you're using is running in swarm mode.

Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.

To deploy your application across the swarm, use `  docker stack deploy`.

Starting violation_db_1 ... 
Starting violation_db_1 ... done
Recreating violation_backend_1 ... 
[812749] Failed to execute script docker-compose

ERROR: for violation_backend_1  'ContainerConfig'

ERROR: for backend  'ContainerConfig'
Traceback (most recent call last):
  File "docker-compose", line 3, in <module>
  File "compose/cli/main.py", line 81, in main
  File "compose/cli/main.py", line 203, in perform_command
  File "compose/metrics/decorator.py", line 18, in wrapper
  File "compose/cli/main.py", line 1186, in up
  File "compose/cli/main.py", line 1182, in up
  File "compose/project.py", line 702, in up
  File "compose/parallel.py", line 108, in parallel_execute
  File "compose/parallel.py", line 206, in producer
  File "compose/project.py", line 688, in do
  File "compose/service.py", line 581, in execute_convergence_plan
  File "compose/service.py", line 503, in _execute_convergence_recreate
  File "compose/parallel.py", line 108, in parallel_execute
  File "compose/parallel.py", line 206, in producer
  File "compose/service.py", line 496, in recreate
  File "compose/service.py", line 615, in recreate_container
  File "compose/service.py", line 334, in create_container
  File "compose/service.py", line 922, in _get_container_create_options
  File "compose/service.py", line 962, in _build_container_volume_options
  File "compose/service.py", line 1549, in merge_volume_bindings
  File "compose/service.py", line 1579, in get_container_data_volumes
KeyError: 'ContainerConfig'
